mins_matrix[1:4,4] <- 0
maxs_matrix[1:4,4] <- 50
#"CH_N2.rte|change = absval" = runif(nsims, 0.05, 0.15), # changed from (0,0.1)
mins_matrix[1:4,5] <- 0
maxs_matrix[1:4,5] <- 0.1
# TRNSRCH.bsn|change = absval" = runif(nsims, 0, 0.3), # default is 0.00
mins_matrix[1:4,6] <- 0
maxs_matrix[1:4,6] <- 0.3
#CH_N1
mins_matrix[1:4,7] <- 0
maxs_matrix[1:4,7] <- 0.15
#"CN2.mgt|change = relchg"= runif(nsims, -0.3, 0.3), #
mins_matrix[1:4,1] <- -0.25
maxs_matrix[1:4,1] <- 0.1
#"GWQMN.gw|change = relchg" = runif(nsims, -0.5, 2), #
mins_matrix[1:4,2] <- -0.5
maxs_matrix[1:4,2] <- 0.5
#"ALPHA_BNK.rte|change = absval" =runif(nsims, 0, 1), #large for flat recessions, and small for steep recessions
mins_matrix[1:4,3] <- 0.5
maxs_matrix[1:4,3] <- 1
#"CH_K2.rte|change = absval" = runif(nsims, 0, 50), # changed from(0,250)
mins_matrix[1:4,4] <- 0
maxs_matrix[1:4,4] <- 50
#"CH_N2.rte|change = absval" = runif(nsims, 0.05, 0.15), # changed from (0,0.1)
mins_matrix[1:4,5] <- 0
maxs_matrix[1:4,5] <- 0.1
# TRNSRCH.bsn|change = absval" = runif(nsims, 0, 0.3), # default is 0.00
mins_matrix[1:4,6] <- 0
maxs_matrix[1:4,6] <- 0.3
#CH_N1
mins_matrix[1:4,7] <- 0
maxs_matrix[1:4,7] <- 0.15
#"CH_K1.sub|change = absval" = runif(nsims, 0, 120), #For prennial streams with continuous groundwater contribution, the effective conductivity will be zero.
mins_matrix[1:4,8] <- 0
maxs_matrix[1:4,8] <- 300
#"RCHRG_DP.gw|change = absval" = runif(nsims, 0, 0.5), # default range is (0,1)
mins_matrix[1:4,9] <- 0
maxs_matrix[1:4,9] <- 1
#"SFTMP.bsn|change = absval"= runif(nsims, -5, 5), # changed from (-2,2),default is 1.0
mins_matrix[1:4,10] <- -5
maxs_matrix[1:4,10] <- 5
#"SMTMP.bsn|change = absval"= runif(nsims, -5, 5), # changed from (-2,2),default is 1.0
mins_matrix[1:4,11] <- -5
maxs_matrix[1:4,11] <-5
#"DEP_IMP.hru|change = absval"= runif(nsims, 2000, 6000), # "generation 21 DEP_IMP 4010.712 31.167"
mins_matrix[1:4,12] <- 0
maxs_matrix[1:4,12] <- 6000
#"DDRAIN.mgt|change = absval"= runif(nsims, 500, 1500), # "generation 21 DDRAIN 1105.285 107.537"
mins_matrix[1:4,13] <- 0
maxs_matrix[1:4,13] <- 2000
#"GDRAIN.mgt|change = absval"= runif(nsims, 0, 50), # "generation 21 GDRAIN 24.686 11.354"
mins_matrix[1:4,14] <- 0
maxs_matrix[1:4,14] <- 72
#BACKTKDQ
mins_matrix[1:4,15] <- 0
maxs_matrix[1:4,15] <- 500
#BACT_SWF
mins_matrix[1:4,16] <- 0
maxs_matrix[1:4,16] <- 1
#"THBACT.bsn|change = absval"= runif(nsims, 0, 2), # default value 1.07
mins_matrix[1:4,17] <- 0
maxs_matrix[1:4,17] <- 10
#"WDPRCH.bsn|change = absval"= runif(nsims, 0, 1) #
mins_matrix[1:4,18] <- 0
maxs_matrix[1:4,18] <- 1
# assign values
for(i in 1:18){
means_matrix[1,i] <- fitted_parameter_list0[[i]]$estimate[[1]]
sds_matrix[1,i]<- fitted_parameter_list0[[i]]$estimate[[2]]
means_matrix[2,i] <- fitted_parameter_list1[[i]]$estimate[[1]]
sds_matrix[2,i]<- fitted_parameter_list1[[i]]$estimate[[2]]
means_matrix[3,i] <- fitted_parameter_list4[[i]]$estimate[[1]]
sds_matrix[3,i]<- fitted_parameter_list4[[i]]$estimate[[2]]
means_matrix[4,i] <- fitted_parameter_list7[[i]]$estimate[[1]]
sds_matrix[4,i]<- fitted_parameter_list7[[i]]$estimate[[2]]
means_matrix[5,i] <- fitted_parameter_list10[[i]]$estimate[[1]]
sds_matrix[5,i]<- fitted_parameter_list10[[i]]$estimate[[2]]
means_matrix[6,i] <- fitted_parameter_list13[[i]]$estimate[[1]]
sds_matrix[6,i]<- fitted_parameter_list13[[i]]$estimate[[2]]
}
# Assign level and panel names
levels <- c("gen0", "gen1", "gen4", "gen7", "gen10", "gen13")
levels <- factor(levels, levels = c("gen0", "gen1", "gen4", "gen7", "gen10", "gen13"))
levels <- fct_relevel(levels, "gen0", "gen1", "gen4", "gen7", "gen10", "gen13")
library(sensitivity)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(matrixStats)
library(miceadds)
#library(dtwclust)
library(vioplot)
library(xts)
#library(SWATplusR)
library(dplyr)
library(dygraphs)
library(ggplot2)
library(lubridate)
library(mapview)
library(plotly)
library(sf)
library(tibble)
library(tidyr)
library(purrr)
library(lhs)
library(hydroGOF)
library(forcats)
library(lubridate)
# change to NAs
means_matrix <- matrix(runif(6 * 18, 0, 10), nrow = 6)   # shape: 6 x 18
dim(means_matrix)
sds_matrix   <- matrix(runif(6 * 18, 0.5, 2), nrow = 6)  # shape: 6 x 18
mins_matrix   <- matrix(runif(6 * 18, 0.5, 2), nrow = 6)  # shape: 6 x 18
maxs_matrix   <- matrix(runif(6 * 18, 0.5, 2), nrow = 6)  # shape: 6 x 18
#"CN2.mgt|change = relchg"= runif(nsims, -0.3, 0.3), #
mins_matrix[1:4,1] <- -0.25
maxs_matrix[1:4,1] <- 0.1
#"GWQMN.gw|change = relchg" = runif(nsims, -0.5, 2), #
mins_matrix[1:4,2] <- -0.5
maxs_matrix[1:4,2] <- 0.5
#"ALPHA_BNK.rte|change = absval" =runif(nsims, 0, 1), #large for flat recessions, and small for steep recessions
mins_matrix[1:4,3] <- 0.5
maxs_matrix[1:4,3] <- 1
#"CH_K2.rte|change = absval" = runif(nsims, 0, 50), # changed from(0,250)
mins_matrix[1:4,4] <- 0
maxs_matrix[1:4,4] <- 50
#"CH_N2.rte|change = absval" = runif(nsims, 0.05, 0.15), # changed from (0,0.1)
mins_matrix[1:4,5] <- 0
maxs_matrix[1:4,5] <- 0.1
# TRNSRCH.bsn|change = absval" = runif(nsims, 0, 0.3), # default is 0.00
mins_matrix[1:4,6] <- 0
maxs_matrix[1:4,6] <- 0.3
#CH_N1
mins_matrix[1:4,7] <- 0
maxs_matrix[1:4,7] <- 0.15
#"CH_K1.sub|change = absval" = runif(nsims, 0, 120), #For prennial streams with continuous groundwater contribution, the effective conductivity will be zero.
mins_matrix[1:4,8] <- 0
maxs_matrix[1:4,8] <- 300
#"RCHRG_DP.gw|change = absval" = runif(nsims, 0, 0.5), # default range is (0,1)
mins_matrix[1:4,9] <- 0
maxs_matrix[1:4,9] <- 1
#"SFTMP.bsn|change = absval"= runif(nsims, -5, 5), # changed from (-2,2),default is 1.0
mins_matrix[1:4,10] <- -5
maxs_matrix[1:4,10] <- 5
#"SMTMP.bsn|change = absval"= runif(nsims, -5, 5), # changed from (-2,2),default is 1.0
mins_matrix[1:4,11] <- -5
maxs_matrix[1:4,11] <-5
#"DEP_IMP.hru|change = absval"= runif(nsims, 2000, 6000), # "generation 21 DEP_IMP 4010.712 31.167"
mins_matrix[1:4,12] <- 0
maxs_matrix[1:4,12] <- 6000
#"DDRAIN.mgt|change = absval"= runif(nsims, 500, 1500), # "generation 21 DDRAIN 1105.285 107.537"
mins_matrix[1:4,13] <- 0
maxs_matrix[1:4,13] <- 2000
#"GDRAIN.mgt|change = absval"= runif(nsims, 0, 50), # "generation 21 GDRAIN 24.686 11.354"
mins_matrix[1:4,14] <- 0
maxs_matrix[1:4,14] <- 72
#BACKTKDQ
mins_matrix[1:4,15] <- 0
maxs_matrix[1:4,15] <- 500
#BACT_SWF
mins_matrix[1:4,16] <- 0
maxs_matrix[1:4,16] <- 1
#"THBACT.bsn|change = absval"= runif(nsims, 0, 2), # default value 1.07
mins_matrix[1:4,17] <- 0
maxs_matrix[1:4,17] <- 10
#"WDPRCH.bsn|change = absval"= runif(nsims, 0, 1) #
mins_matrix[1:4,18] <- 0
maxs_matrix[1:4,18] <- 1
# assign values
for(i in 1:18){
means_matrix[1,i] <- fitted_parameter_list0[[i]]$estimate[[1]]
sds_matrix[1,i]<- fitted_parameter_list0[[i]]$estimate[[2]]
means_matrix[2,i] <- fitted_parameter_list1[[i]]$estimate[[1]]
sds_matrix[2,i]<- fitted_parameter_list1[[i]]$estimate[[2]]
means_matrix[3,i] <- fitted_parameter_list4[[i]]$estimate[[1]]
sds_matrix[3,i]<- fitted_parameter_list4[[i]]$estimate[[2]]
means_matrix[4,i] <- fitted_parameter_list7[[i]]$estimate[[1]]
sds_matrix[4,i]<- fitted_parameter_list7[[i]]$estimate[[2]]
means_matrix[5,i] <- fitted_parameter_list10[[i]]$estimate[[1]]
sds_matrix[5,i]<- fitted_parameter_list10[[i]]$estimate[[2]]
means_matrix[6,i] <- fitted_parameter_list13[[i]]$estimate[[1]]
sds_matrix[6,i]<- fitted_parameter_list13[[i]]$estimate[[2]]
}
# Assign level and panel names
levels <- c("gen0", "gen1", "gen4", "gen7", "gen10", "gen13")
# load parameters but in list format
# 18 parameter fits for each variable
load(file.path(hpc_data, "fitted_parameters0.RData"))
## setup root directory path
if(Sys.info()[4]=="LZ26TPURUCKE-2"){
# tom epa windows
of_root <- file.path("c:", "Users", "tpurucke", "git", "wu_redcedar2")
}
data_in_dir <- file.path(of_root, "data_in")
graphics_dir <- file.path(of_root, "graphics")
src_dir <- file.path(of_root, "src")
hpc_data <- file.path(of_root, "hpc_data", "sim57-flux-weekly")
hpc_data_sensitivity <- file.path(of_root, "hpc_data", "sim56-sensitivity")
# load parameters but in list format
# 18 parameter fits for each variable
load(file.path(hpc_data, "fitted_parameters0.RData"))
fitted_parameter_list0 <- fitted_parameter_list
str(fitted_parameter_list)
fitted_parameter_list0[[2]]$estimate
load(file.path(hpc_data, "fitted_parameters1.RData"))
fitted_parameter_list1 <- fitted_parameter_list
fitted_parameter_list1[[2]]$estimate
load(file.path(hpc_data, "fitted_parameters4.RData"))
fitted_parameter_list4 <- fitted_parameter_list
fitted_parameter_list4[[2]]$estimate
load(file.path(hpc_data, "fitted_parameters7.RData"))
fitted_parameter_list7 <- fitted_parameter_list
fitted_parameter_list7[[2]]$estimate
load(file.path(hpc_data, "fitted_parameters10.RData"))
fitted_parameter_list10 <- fitted_parameter_list
fitted_parameter_list10[[2]]$estimate
load(file.path(hpc_data, "fitted_parameters13.RData"))
fitted_parameter_list13 <- fitted_parameter_list
fitted_parameter_list13[[2]]$estimate
# this loads everything for the generation stats
load(file.path(hpc_data, "generation_stats13.RData"))
generation_stats <- generation_stats[1:14,]
# nse scores for each generation
load(file.path(hpc_data, "nses_parameters0.RData"))
nses_parameters0 <- nses_parameters
dim(nses_parameters0)
parameter_names <- colnames(nses_parameters0)[5:22]
parameter_names
load(file.path(hpc_data, "nses_parameters1.RData"))
nses_parameters1 <- nses_parameters
dim(nses_parameters1)
load(file.path(hpc_data, "nses_parameters4.RData"))
nses_parameters4 <- nses_parameters
dim(nses_parameters4)
load(file.path(hpc_data, "nses_parameters7.RData"))
nses_parameters7 <- nses_parameters
dim(nses_parameters7)
load(file.path(hpc_data, "nses_parameters10.RData"))
nses_parameters10 <- nses_parameters
dim(nses_parameters10)
load(file.path(hpc_data, "nses_parameters13.RData"))
nses_parameters13 <- nses_parameters
dim(nses_parameters13)
# parameter inputs for each generation
load(file.path(hpc_data, "parameter_input_sims0.RData"))
parameter_inputs0 <- parameter_input_sims
dim(parameter_inputs0)
load(file.path(hpc_data, "parameter_input_sims1.RData"))
parameter_inputs1 <- parameter_input_sims
dim(parameter_inputs1)
load(file.path(hpc_data, "parameter_input_sims4.RData"))
parameter_inputs4 <- parameter_input_sims
dim(parameter_inputs4)
load(file.path(hpc_data, "parameter_input_sims7.RData"))
parameter_inputs7 <- parameter_input_sims
dim(parameter_inputs7)
load(file.path(hpc_data, "parameter_input_sims10.RData"))
parameter_inputs10 <- parameter_input_sims
dim(parameter_inputs10)
load(file.path(hpc_data, "parameter_input_sims13.RData"))
parameter_inputs13 <- parameter_input_sims
dim(parameter_inputs13)
# list of output
load(file.path(hpc_data, "bac_cal0.RData"))
bac_cal_output0 <- bac_cal_output
dim(bac_cal_output0)
load(file.path(hpc_data, "bac_cal1.RData"))
bac_cal_output1 <- bac_cal_output
dim(bac_cal_output1)
load(file.path(hpc_data, "bac_cal4.RData"))
bac_cal_output4 <- bac_cal_output
dim(bac_cal_output4)
load(file.path(hpc_data, "bac_cal7.RData"))
bac_cal_output7 <- bac_cal_output
str(bac_cal_output7)
load(file.path(hpc_data, "bac_cal10.RData"))
bac_cal_output10 <- bac_cal_output
dim(bac_cal_output10)
load(file.path(hpc_data, "bac_cal13.RData"))
bac_cal_output13 <- bac_cal_output
str(bac_cal_output13)
# change to NAs
means_matrix <- matrix(runif(6 * 18, 0, 10), nrow = 6)   # shape: 6 x 18
dim(means_matrix)
sds_matrix   <- matrix(runif(6 * 18, 0.5, 2), nrow = 6)  # shape: 6 x 18
mins_matrix   <- matrix(runif(6 * 18, 0.5, 2), nrow = 6)  # shape: 6 x 18
maxs_matrix   <- matrix(runif(6 * 18, 0.5, 2), nrow = 6)  # shape: 6 x 18
#"CN2.mgt|change = relchg"= runif(nsims, -0.3, 0.3), #
mins_matrix[1:4,1] <- -0.25
maxs_matrix[1:4,1] <- 0.1
#"GWQMN.gw|change = relchg" = runif(nsims, -0.5, 2), #
mins_matrix[1:4,2] <- -0.5
maxs_matrix[1:4,2] <- 0.5
#"ALPHA_BNK.rte|change = absval" =runif(nsims, 0, 1), #large for flat recessions, and small for steep recessions
mins_matrix[1:4,3] <- 0.5
maxs_matrix[1:4,3] <- 1
#"CH_K2.rte|change = absval" = runif(nsims, 0, 50), # changed from(0,250)
mins_matrix[1:4,4] <- 0
maxs_matrix[1:4,4] <- 50
#"CH_N2.rte|change = absval" = runif(nsims, 0.05, 0.15), # changed from (0,0.1)
mins_matrix[1:4,5] <- 0
maxs_matrix[1:4,5] <- 0.1
# TRNSRCH.bsn|change = absval" = runif(nsims, 0, 0.3), # default is 0.00
mins_matrix[1:4,6] <- 0
maxs_matrix[1:4,6] <- 0.3
#CH_N1
mins_matrix[1:4,7] <- 0
maxs_matrix[1:4,7] <- 0.15
#"CH_K1.sub|change = absval" = runif(nsims, 0, 120), #For prennial streams with continuous groundwater contribution, the effective conductivity will be zero.
mins_matrix[1:4,8] <- 0
maxs_matrix[1:4,8] <- 300
#"RCHRG_DP.gw|change = absval" = runif(nsims, 0, 0.5), # default range is (0,1)
mins_matrix[1:4,9] <- 0
maxs_matrix[1:4,9] <- 1
#"SFTMP.bsn|change = absval"= runif(nsims, -5, 5), # changed from (-2,2),default is 1.0
mins_matrix[1:4,10] <- -5
maxs_matrix[1:4,10] <- 5
#"SMTMP.bsn|change = absval"= runif(nsims, -5, 5), # changed from (-2,2),default is 1.0
mins_matrix[1:4,11] <- -5
maxs_matrix[1:4,11] <-5
#"DEP_IMP.hru|change = absval"= runif(nsims, 2000, 6000), # "generation 21 DEP_IMP 4010.712 31.167"
mins_matrix[1:4,12] <- 0
maxs_matrix[1:4,12] <- 6000
#"DDRAIN.mgt|change = absval"= runif(nsims, 500, 1500), # "generation 21 DDRAIN 1105.285 107.537"
mins_matrix[1:4,13] <- 0
maxs_matrix[1:4,13] <- 2000
#"GDRAIN.mgt|change = absval"= runif(nsims, 0, 50), # "generation 21 GDRAIN 24.686 11.354"
mins_matrix[1:4,14] <- 0
maxs_matrix[1:4,14] <- 72
#BACKTKDQ
mins_matrix[1:4,15] <- 0
maxs_matrix[1:4,15] <- 500
#BACT_SWF
mins_matrix[1:4,16] <- 0
maxs_matrix[1:4,16] <- 1
#"THBACT.bsn|change = absval"= runif(nsims, 0, 2), # default value 1.07
mins_matrix[1:4,17] <- 0
maxs_matrix[1:4,17] <- 10
#"WDPRCH.bsn|change = absval"= runif(nsims, 0, 1) #
mins_matrix[1:4,18] <- 0
maxs_matrix[1:4,18] <- 1
# assign values
for(i in 1:18){
means_matrix[1,i] <- fitted_parameter_list0[[i]]$estimate[[1]]
sds_matrix[1,i]<- fitted_parameter_list0[[i]]$estimate[[2]]
means_matrix[2,i] <- fitted_parameter_list1[[i]]$estimate[[1]]
sds_matrix[2,i]<- fitted_parameter_list1[[i]]$estimate[[2]]
means_matrix[3,i] <- fitted_parameter_list4[[i]]$estimate[[1]]
sds_matrix[3,i]<- fitted_parameter_list4[[i]]$estimate[[2]]
means_matrix[4,i] <- fitted_parameter_list7[[i]]$estimate[[1]]
sds_matrix[4,i]<- fitted_parameter_list7[[i]]$estimate[[2]]
means_matrix[5,i] <- fitted_parameter_list10[[i]]$estimate[[1]]
sds_matrix[5,i]<- fitted_parameter_list10[[i]]$estimate[[2]]
means_matrix[6,i] <- fitted_parameter_list13[[i]]$estimate[[1]]
sds_matrix[6,i]<- fitted_parameter_list13[[i]]$estimate[[2]]
}
# Assign level and panel names
levels <- c("gen0", "gen1", "gen4", "gen7", "gen10", "gen13")
levels <- factor(levels, levels = c("gen0", "gen1", "gen4", "gen7", "gen10", "gen13"))
levels <- fct_relevel(levels, "gen0", "gen1", "gen4", "gen7", "gen10", "gen13")
panels <- parameter_names
rownames(means_matrix) <- levels
rownames(sds_matrix) <- levels
rownames(mins_matrix) <- levels
rownames(maxs_matrix) <- levels
colnames(means_matrix) <- panels
colnames(sds_matrix) <- panels
colnames(mins_matrix) <- panels
colnames(maxs_matrix) <- panels
means_matrix
sds_matrix
mins_matrix
maxs_matrix
# Convert to tidy long format
means_long <- as.data.frame(means_matrix) %>%
mutate(level = rownames(means_matrix)) %>%
pivot_longer(-level, names_to = "panel", values_to = "mean")
sds_long <- as.data.frame(sds_matrix) %>%
mutate(level = rownames(sds_matrix)) %>%
pivot_longer(-level, names_to = "panel", values_to = "sd")
mins_long <- as.data.frame(mins_matrix) %>%
mutate(level = rownames(mins_matrix)) %>%
pivot_longer(-level, names_to = "panel", values_to = "mins")
maxs_long <- as.data.frame(maxs_matrix) %>%
mutate(level = rownames(maxs_matrix)) %>%
pivot_longer(-level, names_to = "panel", values_to = "maxs")
parameters2 <- left_join(means_long, sds_long, by = c("level", "panel"))
parameters1 <- left_join(parameters2, mins_long, by = c("level", "panel"))
parameters <- as.data.frame(left_join(parameters1, maxs_long, by = c("level", "panel")))
parameters
colnames(parameters)
# Suppose your long data is in a dataframe called 'df'
df_curves <- parameters %>%
group_by(panel, level) %>%
group_modify(
~{
x = seq(.x$mins, .x$maxs, length.out = 200)
data.frame(
x = x,
density = dnorm(x, mean = .x$mean, sd = .x$sd),
mean = .x$mean,
sd = .x$sd,
min = .x$mins,
max = .x$maxs
)
}
) %>%
ungroup()
ggplot(df_curves, aes(x = x, y = density, color = level)) +
geom_line(size = 1) +
facet_wrap(~ panel, ncol = 6, scales = "free") +
theme_minimal() +
labs(
title = "Posterior Densities by Parameter (Truncated to Initial Uniform Prior)",
x = "Value",
y = "Density"
) +
scale_color_brewer(palette = "Set1")
colnames(df_curves)
ggplot(df_curves, aes(x = x, y = density, color = level)) +
geom_line(size = 1) +
facet_wrap(~ panel, ncol = 6, scales = "free_x") +
theme_minimal() +
labs(
title = "Posterior Densities by Parameter (Truncated to Initial Uniform Prior)",
x = "Value",
y = "Density"
) +
scale_color_brewer(palette = "Set1")
View(df_curves)
ggplot(df_curves, aes(x = x, y = density, color = level)) +
geom_line(size = 1) +
facet_wrap(~ panel, ncol = 3, scales = "free_x") +
theme_minimal() +
labs(
title = "Posterior Densities by Parameter (Truncated to Initial Uniform Prior)",
x = "Value",
y = "Density"
) +
scale_color_brewer(palette = "Set1")
library(patchwork)
install.packages("patchwork")
colnames(df_curves)
plots <- lapply(
split(df_curves, df_curves$panel),
function(d) {
ggplot(d, aes(x = x, y = density, color = level)) +
geom_line(size = 1) +
xlim(min, max) +
theme_minimal() +
labs(x = "Value", y = "Density")
}
)
plots <- lapply(
split(df_curves, df_curves$panel),
function(d) {
ggplot(d, aes(x = x, y = density, color = level)) +
geom_line(size = 1) +
xlim(min, max) +
theme_minimal() +
labs(x = "Value", y = "Density")
}
)
df_curves$panel
plots
lapply(
split(df_curves, df_curves$panel),
function(d) {
ggplot(d, aes(x = x, y = density, color = level)) +
geom_line(size = 1) +
xlim(min, max) +
theme_minimal() +
labs(x = "Value", y = "Density")
}
)
load(file.path(hpc_data_sensitivity, "flux_pcc.RData"))
str(flux_pcc)
fitted_parameter_list0
str  scale_x_continuous(limits = c(X, X)), #
str(fitted_parameter_list0)
fitted_parameter_list0[[2]]$estimate
fitted_parameter_list0 <- fitted_parameter_list
## setup root directory path
if(Sys.info()[4]=="LZ26TPURUCKE-2"){
# tom epa windows
of_root <- file.path("c:", "Users", "tpurucke", "git", "wu_redcedar2")
}
data_in_dir <- file.path(of_root, "data_in")
graphics_dir <- file.path(of_root, "graphics")
src_dir <- file.path(of_root, "src")
hpc_data <- file.path(of_root, "hpc_data", "sim56-flux-weekly")
hpc_data_sensitivity <- file.path(of_root, "hpc_data", "sim56-sensitivity")
# 0, 1, 5, 10, 15, 19
# load parameters but in list format
# 18 parameter fits for each variable
load(file.path(hpc_data, "fitted_parameters0.RData"))
fitted_parameter_list0 <- fitted_parameter_list
str(fitted_parameter_list)
fitted_parameter_list0[[2]]$estimate
fitted_parameter_list0[[1]]
fitted_parameter_list0[[5]]$estimate
fitted_parameter_list0[[17]]$estimate
fitted_parameter_list0[[18]]$estimate
fitted_parameter_list0[[20]]$estimate
fitted_parameter_list0[[19]]$estimate
fitted_parameter_list0[[18]]$estimate
fitted_parameter_list0[[18]]
fitted_parameter_list0[[8]]$estimate
dim(parameter_inputs4)
load(file.path(hpc_data, "parameter_input_sims4.RData"))
parameter_inputs4 <- parameter_input_sims
parameter_inputs4
